// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Pervasives = require("bs-platform/lib/js/pervasives.js");

function wrapping_add(a, b) {
  return a + b & 255;
}

function wrapping_add16(a, b) {
  return a + b & 65535;
}

function signed(v) {
  var match = v > 127;
  if (match) {
    return -(Pervasives.lnot(v) + 1 & 255) | 0;
  } else {
    return v;
  }
}

function is_bit_set($$byte, bit) {
  return ($$byte & (1 << bit)) > 0;
}

function set_bit($$byte, bit) {
  return $$byte | (1 << bit);
}

function clear_bit($$byte, bit) {
  return $$byte & Pervasives.lnot((1 << bit));
}

function split_word(word) {
  var lo = word & 255;
  var hi = ((word & 65280) >>> 8);
  return /* tuple */[
          lo,
          hi
        ];
}

exports.wrapping_add = wrapping_add;
exports.wrapping_add16 = wrapping_add16;
exports.signed = signed;
exports.is_bit_set = is_bit_set;
exports.set_bit = set_bit;
exports.clear_bit = clear_bit;
exports.split_word = split_word;
/* No side effect */
