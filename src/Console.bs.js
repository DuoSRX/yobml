// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var $$Array = require("bs-platform/lib/js/array.js");
var Cpu$Yobml = require("./Cpu.bs.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");
var CpuExec$Yobml = require("./CpuExec.bs.js");

function make(param) {
  var file = Fs.readFileSync("./roms/01-special.gb", "binary");
  var rom = $$Array.mapi((function (n, param) {
          return Caml_string.get(file, n);
        }), Caml_array.caml_make_vect(file.length, 0));
  return /* record */[
          /* cpu */Cpu$Yobml.make(rom),
          /* running */true
        ];
}

function run($$console$1) {
  var _console = $$console$1;
  var _steps = 0;
  while(true) {
    var steps = _steps;
    var $$console$2 = _console;
    var match = CpuExec$Yobml.step($$console$2[/* cpu */0]);
    var cpu = match[0];
    if (steps < 1410065408) {
      _steps = steps + 1 | 0;
      _console = /* record */[
        /* cpu */cpu,
        /* running */$$console$2[/* running */1]
      ];
      continue ;
    } else {
      console.log(cpu[/* serial */6]);
      return /* () */0;
    }
  };
}

exports.make = make;
exports.run = run;
/* fs Not a pure module */
