// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Printf = require("bs-platform/lib/js/printf.js");
var Cpu$Yobml = require("../Cpu.bs.js");
var CpuExec$Yobml = require("../CpuExec.bs.js");

var initial_state = /* record */[
  /* af */0,
  /* bc */0,
  /* de */0,
  /* hl */0,
  /* sp */0,
  /* pc */0,
  /* flags */"----",
  /* buttons */0,
  /* dpad */0
];

function b2hex($$byte) {
  return Curry._1(Printf.sprintf(/* Format */[
                  /* Char_literal */Block.__(12, [
                      /* "$" */36,
                      /* Int */Block.__(4, [
                          /* Int_X */8,
                          /* Lit_padding */Block.__(0, [
                              /* Zeros */2,
                              2
                            ]),
                          /* No_precision */0,
                          /* End_of_format */0
                        ])
                    ]),
                  "$%02X"
                ]), $$byte);
}

function w2hex(word) {
  return Curry._1(Printf.sprintf(/* Format */[
                  /* Char_literal */Block.__(12, [
                      /* "$" */36,
                      /* Int */Block.__(4, [
                          /* Int_X */8,
                          /* Lit_padding */Block.__(0, [
                              /* Zeros */2,
                              4
                            ]),
                          /* No_precision */0,
                          /* End_of_format */0
                        ])
                    ]),
                  "$%04X"
                ]), word);
}

function RegistersComponent(Props) {
  var $$console = Props.console;
  var match = React.useState((function () {
          return initial_state;
        }));
  var setState = match[1];
  var state = match[0];
  React.useEffect((function () {
          setInterval((function (param) {
                  var cpu = $$console[0][/* cpu */0];
                  var af = Cpu$Yobml.get_register16(cpu, /* AF */0);
                  var bc = Cpu$Yobml.get_register16(cpu, /* BC */1);
                  var de = Cpu$Yobml.get_register16(cpu, /* DE */2);
                  var hl = Cpu$Yobml.get_register16(cpu, /* HL */3);
                  var sp = Cpu$Yobml.get_register16(cpu, /* SP */4);
                  var flags = CpuExec$Yobml.pretty_flags(cpu);
                  var buttons = $$console[0][/* input */3][/* buttons */1];
                  var dpad = $$console[0][/* input */3][/* dpad */0];
                  return Curry._1(setState, (function (_s) {
                                return /* record */[
                                        /* af */af,
                                        /* bc */bc,
                                        /* de */de,
                                        /* hl */hl,
                                        /* sp */sp,
                                        /* pc */cpu[/* pc */0],
                                        /* flags */flags,
                                        /* buttons */buttons,
                                        /* dpad */dpad
                                      ];
                              }));
                }), 16);
          return undefined;
        }), ([]));
  return React.createElement("code", undefined, React.createElement("div", {
                  id: "reg-PC"
                }, "PC = " + w2hex(state[/* pc */5])), React.createElement("div", {
                  id: "reg-AF"
                }, "AF = " + w2hex(state[/* af */0])), React.createElement("div", {
                  id: "reg-BC"
                }, "BC = " + w2hex(state[/* bc */1])), React.createElement("div", {
                  id: "reg-DE"
                }, "DE = " + w2hex(state[/* de */2])), React.createElement("div", {
                  id: "reg-HL"
                }, "HL = " + w2hex(state[/* hl */3])), React.createElement("div", {
                  id: "reg-PC"
                }, "SP = " + w2hex(state[/* sp */4])), React.createElement("div", {
                  id: "flags"
                }, "Flags = " + state[/* flags */6]), React.createElement("div", {
                  id: "buttons"
                }, "Buttons = " + w2hex(state[/* buttons */7])), React.createElement("div", {
                  id: "dpad"
                }, "DPad = " + w2hex(state[/* dpad */8])));
}

var make = RegistersComponent;

exports.initial_state = initial_state;
exports.b2hex = b2hex;
exports.w2hex = w2hex;
exports.make = make;
/* react Not a pure module */
