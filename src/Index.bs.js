// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Console$Yobml = require("./Console.bs.js");

var fetch_rom = (
  async function logFetch(url) {
    const response = await fetch(url);
    const buffer = await response.arrayBuffer();
    return new Uint8Array(buffer)
  }
  );

var display = ( document.getElementById("display") );

var ctx = display.getContext("2d");

var display$1 = (
    function display(ctx, pixels) {
      var imageData = new ImageData(new Uint8ClampedArray(pixels), 160, 144)
      ctx.putImageData(imageData, 0, 0);
    }
  );

var steps = /* record */[/* contents */0];

function step($$console$1) {
  var $$console$2 = /* record */[/* contents */$$console$1];
  while(!$$console$2[0][/* gpu */1][/* new_frame */9]) {
    $$console$2[0] = Console$Yobml.step($$console$2[0]);
  };
  Curry._2(display$1, ctx, $$console$2[0][/* gpu */1][/* frame */5]);
  $$console$2[0][/* gpu */1][/* new_frame */9] = false;
  steps[0] = steps[0] + 1 | 0;
  if (steps[0] < 2000) {
    setTimeout((function (param) {
            return step($$console$2[0]);
          }), 16);
    return /* () */0;
  } else {
    console.log("Done");
    return /* () */0;
  }
}

Curry._1(fetch_rom, "http://localhost:8000/roms/tetris.gb").then((function (rom) {
        var $$console = Console$Yobml.make(rom);
        step($$console);
        return Promise.resolve(/* () */0);
      }));

exports.fetch_rom = fetch_rom;
exports.ctx = ctx;
exports.display = display$1;
exports.steps = steps;
exports.step = step;
/* fetch_rom Not a pure module */
