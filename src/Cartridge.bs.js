// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Printf = require("bs-platform/lib/js/printf.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var CartridgeHeader$Yobml = require("./CartridgeHeader.bs.js");

function in_range(a, b, n) {
  if (Caml_obj.caml_greaterequal(n, a)) {
    return Caml_obj.caml_lessequal(n, b);
  } else {
    return false;
  }
}

function make_rom_only(rom, header) {
  var load = function (address) {
    if (in_range(0, 32767, address)) {
      return Caml_array.caml_array_get(rom, address);
    } else if (in_range(40960, 49151, address)) {
      return 0;
    } else {
      return Pervasives.failwith(Curry._1(Printf.sprintf(/* Format */[
                          /* String_literal */Block.__(11, [
                              "Unhandled rom read $",
                              /* Int */Block.__(4, [
                                  /* Int_X */8,
                                  /* Lit_padding */Block.__(0, [
                                      /* Zeros */2,
                                      4
                                    ]),
                                  /* No_precision */0,
                                  /* End_of_format */0
                                ])
                            ]),
                          "Unhandled rom read $%04X"
                        ]), address));
    }
  };
  var store = function (param, param$1) {
    return /* () */0;
  };
  return /* record */[
          /* header */header,
          /* load */load,
          /* store */store
        ];
}

function make(rom) {
  var header = CartridgeHeader$Yobml.make(rom);
  var match = header[/* cartridge_type */0];
  if (match !== 0) {
    return Pervasives.failwith("Unimplemented MBC type");
  } else {
    return make_rom_only(rom, header);
  }
}

exports.in_range = in_range;
exports.make_rom_only = make_rom_only;
exports.make = make;
/* No side effect */
